name: Liquibase CI/CD Demo

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  db-deploy:
    runs-on: ubuntu-latest

    services:
      postgres-dev:
        image: postgres:15
        env: { POSTGRES_USER: demo, POSTGRES_PASSWORD: demo, POSTGRES_DB: appdb_dev }
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U demo"
          --health-interval 5s --health-timeout 5s --health-retries 20
      postgres-test:
        image: postgres:15
        env: { POSTGRES_USER: demo, POSTGRES_PASSWORD: demo, POSTGRES_DB: appdb_test }
        ports: [ "5433:5432" ]
        options: >-
          --health-cmd "pg_isready -U demo"
          --health-interval 5s --health-timeout 5s --health-retries 20
      postgres-prod:
        image: postgres:15
        env: { POSTGRES_USER: demo, POSTGRES_PASSWORD: demo, POSTGRES_DB: appdb_prod }
        ports: [ "5434:5432" ]
        options: >-
          --health-cmd "pg_isready -U demo"
          --health-interval 5s --health-timeout 5s --health-retries 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dar permissão ao script
        run: chmod +x liquibase/scripts/ci_deploy.sh

      - name: Deploy dev → test → prod
        run: bash liquibase/scripts/ci_deploy.sh

      - name: Publicar planos SQL (artefatos)
        uses: actions/upload-artifact@v4
        with:
          name: sql-plans
          path: |
            plan_DEV.sql
            plan_TEST.sql
            plan_PROD.sql
          if-no-files-found: ignore
